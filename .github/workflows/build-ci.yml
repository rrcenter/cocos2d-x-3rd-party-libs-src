name: build-ci

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  push:
    paths:
      - .github/workflows/build-ci.yml
      - contrib/src/luajit/luajit-v2.1.0-beta3.patch
      - contrib/src/openssl/rules.mak
      - contrib/bootstrap
      - contrib/src/luajit/*
      - build/setup_env_linux.sh
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      no_dll:
         # actions run ID
         description: 'Do not build windows lib as dll'
         # Default value if no value is explicitly provided
         default: ''
         # Input has to be provided for the workflow to run
         required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ios:
    # The type of runner that the job will run on, macos-12
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: macos-12
    
    strategy:
      matrix:
        arch:
          - arm64
    
    env:
      BUILD_TARGET: ios
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with: 
          xcode-version: '13.4' #'13.4' https://developer.apple.com/support/xcode/

      # https://github.com/actions/runner-images/blob/main/images/macos/macos-10.15-Readme.md
      # - name: Install brew
        # run: bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      - name: install env
        run: brew install automake

      - name: Build
        run: cd build && ./build.sh -p=ios --libs=luajit --mode=release --arch=arm64,x86_64
        # run: cd build && ./build.sh -p=ios --libs=png,zlib,websockets,curl,freetype,jpeg,tiff,webp,openssl,uv --mode=release

  android:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch:
          - arm64
    
    env:
      BUILD_TARGET: android
      BUILD_ARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Android NDK
        run: cd build && sh ./setup_env_linux.sh

      - name: Build
        run: ./build.sh -p=android --libs=luajit --mode=release
      #   env: 
      #     ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}

